{"version":3,"sources":["http-common.js","services/movie.service.js","components/add-movie.component.js","components/data-table.js","components/movie-list.component.js","components/login.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","AddMovie","props","onChangeTitle","bind","onChangeDescription","onChangeReview","onChangeImageUrl","onChangecategoryId","saveMovie","newMovie","state","movieName","description","review","imageUrl","categoryId","submitted","e","this","setState","target","value","MovieDataService","then","response","console","log","catch","published","className","onClick","newTutorial","htmlFor","type","required","onChange","name","Component","DataTable","updateMovie","deleteMovie","obj","update","class","width","src","alt","height","category","categoryName","trigger","style","textAlign","MovieList","movieCollection","getAll","res","error","map","i","key","dataTable","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","Login","user","onBtnLoginClick","signInWithPopup","err","onBtnLogoutClick","signOut","display","justifyContent","marginTop","length","photoURL","displayName","App","href","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.86a8258a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://4a7c98bf.ngrok.io\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass MovieDataService {\r\n  getAll() {\r\n    return http.get(\"/movie\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/movie/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/movie\", data);\r\n  }\r\n\r\n  update(data) {\r\n    return http.put(\"/movie\", data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/movie/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/movies`);\r\n  }\r\n\r\n  findByTitle(title) {\r\n    return http.get(`/movies?title=${title}`);\r\n  }\r\n}\r\n\r\nexport default new MovieDataService();","import React, { Component } from \"react\";\r\nimport MovieDataService from \"../services/movie.service\";\r\n\r\nexport default class AddMovie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeReview= this.onChangeReview.bind(this);\r\n    this.onChangeImageUrl= this.onChangeImageUrl.bind(this);\r\n    this.onChangecategoryId= this.onChangecategoryId.bind(this);\r\n    this.saveMovie = this.saveMovie.bind(this);\r\n    this.newMovie = this.newMovie.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      movieName: \"\",\r\n      description: \"\",\r\n      review:\"\",\r\n      imageUrl:\"\",\r\n      categoryId:\"\",\r\n      \r\n \r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      movieName: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeReview(e) {\r\n    this.setState({\r\n      review: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeImageUrl(e) {\r\n    this.setState({\r\n      imageUrl: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangecategoryId(e) {\r\n    this.setState({\r\n      categoryId: e.target.value\r\n    });\r\n  }\r\n\r\n  saveMovie() {\r\n    var data = {\r\n      movieName: this.state.movieName,\r\n      description: this.state.description,\r\n      review: this.state.review,\r\n      imageUrl: this.state.imageUrl,\r\n      categoryId: this.state.categoryId,\r\n      \r\n    };\r\n\r\n    MovieDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          review: response.data.review,\r\n          imageUrl:response.data.imageUrl,\r\n          categoryId: response.data.categoryId,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n      console.log(data)\r\n  }\r\n\r\n  newMovie() {\r\n    this.setState({\r\n      id: null,\r\n      movieName: \"\",\r\n      description: \"\",\r\n      review:\"\",\r\n      imageUrl:\"\",\r\n      categoryId:\"\",\r\n      published: false,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"submit-form\">\r\n          {this.state.submitted ? (\r\n            <div>\r\n              <h4>You submitted successfully!</h4>\r\n              <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n                Add\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\"><b>Title</b></label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  required\r\n                  value={this.state.movieName}\r\n                  onChange={this.onChangeTitle}\r\n                  name=\"title\"\r\n                />\r\n              </div>\r\n  \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\"><b>Description</b></label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  required\r\n                  value={this.state.description}\r\n                  onChange={this.onChangeDescription}\r\n                  name=\"description\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"review\"><b>Review</b></label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"review\"\r\n                  required\r\n                  value={this.state.review}\r\n                  onChange={this.onChangeReview}\r\n                  name=\"review\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"imageUrl\"><b>Image</b></label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"imageUrl\"\r\n                  required\r\n                  value={this.state.imageUrl}\r\n                  onChange={this.onChangeImageUrl}\r\n                  name=\"Image URL\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"categoryId\"><b>CategoryId</b></label>\r\n                <p>Horor : 85856230-86c2-11ea-bbec-d1cfc9b33a32</p>\r\n                                  <p>Action : 8540df20-86c2-11ea-bbec-d1cfc9b33a32</p>\r\n                                  <p>Romance : 8597ffd0-86c2-11ea-bbec-d1cfc9b33a32</p>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"imageUrl\"\r\n                  required\r\n                  value={this.state.categoryId}\r\n                  onChange={this.onChangecategoryId}\r\n                  name=\"categoryId\"\r\n                />\r\n              </div>\r\n  \r\n              <button onClick={this.saveMovie} className=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport {  Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\r\nimport Popup from \"reactjs-popup\";\r\nimport MovieDataService from \"../services/movie.service\";\r\n\r\nexport default class DataTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeReview= this.onChangeReview.bind(this);\r\n    this.onChangeImageUrl= this.onChangeImageUrl.bind(this);\r\n    this.onChangecategoryId= this.onChangecategoryId.bind(this);\r\n    this.updateMovie = this.updateMovie.bind(this);\r\n    this.newMovie = this.newMovie.bind(this);\r\n    this.deleteMovie = this.deleteMovie.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.obj.id ,\r\n      movieName: \"\",\r\n      description: \"\",\r\n      review:\"\",\r\n      imageUrl:\"\",\r\n      categoryId:\"\",\r\n      \r\n \r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      movieName: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeReview(e) {\r\n    this.setState({\r\n      review: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeImageUrl(e) {\r\n    this.setState({\r\n      imageUrl: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangecategoryId(e) {\r\n    this.setState({\r\n      categoryId: e.target.value\r\n    });\r\n  }\r\n\r\n  updateMovie() {\r\n    var data = {\r\n      id: this.state.id,\r\n      movieName: this.state.movieName,\r\n      description: this.state.description,\r\n      review: this.state.review,\r\n      imageUrl: this.state.imageUrl,\r\n      categoryId: this.state.categoryId,\r\n      \r\n    };\r\n\r\n    MovieDataService.update(data)\r\n      .then((data) => {\r\n        console.log(data)\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n      console.log(data)\r\n  }\r\n\r\n  deleteMovie() {\r\n    var id = this.state.id;\r\n    return MovieDataService.delete(id);\r\n    //console.log(id)\r\n    //alert(\"hai\");\r\n    \r\n}\r\n\r\n\r\n\r\n  newMovie() {\r\n    this.setState({\r\n      id: \"\",\r\n      movieName: \"\",\r\n      description: \"\",\r\n      review:\"\",\r\n      imageUrl:\"\",\r\n      categoryId:\"\",\r\n      published: false,\r\n\r\n      submitted: false\r\n    });\r\n    \r\n  }\r\n  render() {\r\n    console.log(this.props.obj.description);\r\n   \r\n    return ( \r\n          <div class=\"col-lg-4\">  \r\n            <div class=\"card\">\r\n            <div class=\"card-header\">  \r\n              <i className=\"fa fa-align-justify\"></i> <b>{this.props.obj.movieName}</b>\r\n            </div>  \r\n              <div class=\"card-body\">\r\n                <div className=\"table-responsive\" width=\"300px\">\r\n                  <table className=\"table\">\r\n                    <tbody>\r\n                      <tr>  \r\n                        <td>\r\n                        <img \r\n                          src={this.props.obj.imageUrl}\r\n                          alt=\"new\"\r\n                          width=\"300\" height=\"150\"/></td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Judul : {this.props.obj.movieName}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Deskripsi : {this.props.obj.description}</td> \r\n                      </tr>\r\n                      <tr>\r\n                        <td>Kategori : {this.props.obj.category.categoryName}</td> \r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Popup trigger={<button className=\"badge\"> \r\n                            Review</button>}>\r\n                              <div style={{textAlign: \"center\",}}>\r\n                                <h5>{this.props.obj.movieName}</h5>\r\n                                <div>Review : {this.props.obj.review}</div>\r\n                              </div>\r\n                          </Popup>\r\n                          <Popup trigger={<button className=\"badge\"> \r\n                            Delete</button>}>\r\n                              <div style={{textAlign: \"center\",}}>\r\n                                <h5>Delete</h5>\r\n                                <button onClick= {this.deleteMovie} className=\"btn btn-success\">Delete</button>\r\n                              </div>\r\n                          </Popup>\r\n                          <Popup trigger={<button className=\"badge\"> \r\n                            Update</button>}>\r\n                              <div style={{textAlign: \"Left\",}}>\r\n                                <div>{\"Update \"+this.props.obj.movieName}</div>\r\n                                {/* <div className=\"form-group\">\r\n                                  <label htmlFor=\"id\">id</label>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"id\"\r\n                                    required\r\n                                    value={this.props.obj.id}\r\n                                    onChange={this.onChangeId}\r\n                                    name=\"id\"\r\n                                  />\r\n                                </div> */}\r\n                                <div className=\"form-group\" width=\"70px\">\r\n                                  <label htmlFor=\"moviename\"><b>Name</b></label>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"movieName\"\r\n                                    required\r\n                                    value={this.state.movieName}\r\n                                    onChange={this.onChangeTitle}\r\n                                    name=\"movieName\"\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              \r\n                              <div className=\"form-group\">\r\n                                  <label htmlFor=\"description\"><b>Description</b></label>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"desription\"\r\n                                    required\r\n                                    value={this.state.description}\r\n                                    onChange={this.onChangeDescription}\r\n                                    name=\"description\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                  <label htmlFor=\"review\"><b>Review</b></label>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"review\"\r\n                                    required\r\n                                    value={this.state.review}\r\n                                    onChange={this.onChangeReview}\r\n                                    name=\"review\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                  <label htmlFor=\"Image\"><b>Image</b></label>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"image\"\r\n                                    required\r\n                                    value={this.state.imageUrl}\r\n                                    onChange={this.onChangeImageUrl}\r\n                                    name=\"image\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                  <label htmlFor=\"category\"><b>Category</b></label>\r\n                                  <p>Horor : 85856230-86c2-11ea-bbec-d1cfc9b33a32</p>\r\n                                  <p>Action : 8540df20-86c2-11ea-bbec-d1cfc9b33a32</p>\r\n                                  <p>Romance : 8597ffd0-86c2-11ea-bbec-d1cfc9b33a32</p>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"category\"\r\n                                    required\r\n                                    value={this.state.categoryId}\r\n                                    onChange={this.onChangecategoryId}\r\n                                    name=\"desription\"\r\n                                  />\r\n                                  \r\n                                </div>\r\n                                <button onClick={this.updateMovie} className=\"btn btn-success\">\r\n                                  Submit\r\n                                </button>\r\n                          </Popup>\r\n                        </td> \r\n                      </tr>\r\n                    </tbody>\r\n                    </table>\r\n                  </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n          \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MovieDataService from \"../services/movie.service\";\r\nimport DataTable from \"./data-table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nexport default class MovieList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {movieCollection:[]};\r\n  }\r\n\r\n  componentDidMount() {\r\n    MovieDataService.getAll()\r\n      .then(res => {\r\n        this.setState({movieCollection: res.data});\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  dataTable() {\r\n    return this.state.movieCollection.map((data, i) => {\r\n      return <DataTable obj={data} key={i} />;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        // <div className=\"wrapper-users\">\r\n        //     <div className=\"container\">\r\n        //         <table className=\"table table-striped table-dark\">\r\n        //             <thead className=\"thead-dark\">\r\n        //                 <tr>\r\n        //                     {/* <td>ID</td> */}\r\n        //                     {/* <td>Name</td>\r\n        //                     <td>Description</td>\r\n        //                     <td>Review</td>\r\n        //                     <td>image</td>\r\n        //                     <td>category</td> */}\r\n        //                 </tr>\r\n        //             </thead>\r\n        <div>\r\n          <h1>Movie List</h1>\r\n          <div class=\"row\">\r\n          {this.dataTable()}\r\n        </div>\r\n        </div>\r\n        \r\n        //         </table>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n  }  \r\n}","import React, { Component } from 'react';\r\nimport firebase from 'firebase'\r\nimport './App.css';\r\n\r\nimport { Router } from 'react-router-dom';\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyCuRXcvrYUFE9uKVmwPjTugOsZ1U6ezqXQ\",\r\n  authDomain: \"weblogin-ugm.firebaseapp.com\",\r\n  databaseURL: \"https://weblogin-ugm.firebaseio.com\",\r\n  projectId: \"weblogin-ugm\",\r\n  storageBucket: \"weblogin-ugm.appspot.com\",\r\n  messagingSenderId: \"744131421435\",\r\n  appId: \"1:744131421435:web:c48dfd6b4b5431a8d1bc5e\",\r\n  measurementId: \"G-3L39G900EY\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nclass Login extends Component {\r\n  state = {user : []}\r\n  onBtnLoginClick = () => {\r\n    firebase.auth().signInWithPopup(provider)\r\n    .then((res) => {\r\n      this.setState()\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n  onBtnLogoutClick = () => {\r\n    firebase.auth().signOut()\r\n    .then((res) => this.setState({user : []}))\r\n    .catch((err) => console.log(err))\r\n  }\r\n  render() {\r\n    return (\r\n      // <Router>\r\n      //   <Router path=\"/home\" component={Home} />\r\n      // </Router>\r\n      <div>\r\n        <div style={{display : 'flex', justifyContent: 'center', marginTop:'300px'}}>\r\n          {\r\n          this.state.user.length == 0\r\n          ?\r\n          <input type='button' value='login with google' onClick={this.onBtnLoginClick} />\r\n        : \r\n        <div>\r\n          <img src={this.state.user.photoURL} alt='broken' width=\"200px\"/>\r\n          <p>{this.state.user.displayName} </p>\r\n          <input type='button' value='log out' onClick={this.onBtnLogoutClick}/>\r\n        </div>}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AddMovie from \"./components/add-movie.component\";\n// import Movie from \"./components/movie.component\";\nimport MovieList from \"./components/movie-list.component\";\nimport Login from \"./components/login.component\";\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n} */\n\nclass App extends Component{\n\n  render(){\n    return (\n      <Router>\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <a href=\"/movies\" className=\"navbar-brand\">\n              Pelem\n            </a>\n            <div className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/movies\"} className=\"nav-link\">\n                  Movies\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/add\"} className=\"nav-link\">\n                  Add\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n            </div>\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path={[\"/\", \"/movies\"]} component={MovieList} />\n              <Route exact path=\"/add\" component={AddMovie} />\n              <Route exact path=\"/login\" component={Login} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}